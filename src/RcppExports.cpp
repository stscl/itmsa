// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppThread.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// RcppICM
double RcppICM(Rcpp::IntegerVector d, Rcpp::IntegerVector s, Rcpp::String unit);
RcppExport SEXP _itmsa_RcppICM(SEXP dSEXP, SEXP sSEXP, SEXP unitSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type unit(unitSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppICM(d, s, unit));
    return rcpp_result_gen;
END_RCPP
}
// RcppICMP
Rcpp::NumericVector RcppICMP(Rcpp::IntegerVector d, Rcpp::IntegerVector s, Rcpp::String unit, int seed, int permutation_number);
RcppExport SEXP _itmsa_RcppICMP(SEXP dSEXP, SEXP sSEXP, SEXP unitSEXP, SEXP seedSEXP, SEXP permutation_numberSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type d(dSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type s(sSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type unit(unitSEXP);
    Rcpp::traits::input_parameter< int >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type permutation_number(permutation_numberSEXP);
    rcpp_result_gen = Rcpp::wrap(RcppICMP(d, s, unit, seed, permutation_number));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_itmsa_RcppICM", (DL_FUNC) &_itmsa_RcppICM, 3},
    {"_itmsa_RcppICMP", (DL_FUNC) &_itmsa_RcppICMP, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_itmsa(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
